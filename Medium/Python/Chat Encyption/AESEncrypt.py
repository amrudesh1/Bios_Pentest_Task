from Crypto.Cipher import AES
from Crypto import Random


class Encryptor:
    def __init__(self, key):
        self.key = key

    def msg_pad(self, msg):
        length = 16 - (len(msg) % 16)
        msg += bytes([length]) * length
        return msg

    def encrypt_msg(self, msg):
        message = self.msg_pad(msg)
        iv = Random.new().read(AES.block_size)
        cipher = AES.new(self.key, AES.MODE_CBC, iv)
        return iv + cipher.encrypt(message)

    def decrypt_msg(self, ciphertext):
        iv = ciphertext[:AES.block_size]
        cipher = AES.new(self.key, AES.MODE_CBC, iv)
        plaintext = cipher.decrypt(ciphertext[:-ciphertext[-1]])
        return plaintext.rstrip(b"\0")
